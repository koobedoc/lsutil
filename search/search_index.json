{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The <code>lsuitl</code> package combines Unix <code>ls</code>, <code>find</code>, and <code>tree</code> into a Python module and a command.</p> <p>Warning</p> <p>Not yet done (has not reached version 0.1.0), no commitment to finish.</p> <p><code>lsutil</code> combines commonly used functionalities of the <code>ls</code>, <code>find</code>, and <code>tree</code> commands. The functionality is approximately similar to</p> <pre><code>find &lt;find options&gt; -exec ls &lt;ls options&gt; \\{\\} \\;\n</code></pre> <p>with perhaps better performance and ease of use. Some unique functionalities are:</p> <ul> <li>ignore files</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>The package is available on <code>pypi.org</code>. Install the package by</p> <pre><code>pip install lsutil\n</code></pre>"},{"location":"#command-line","title":"Command line","text":"<p>The command <code>lsutil</code> is available as a script.</p>"},{"location":"#python-module","title":"Python module","text":"<pre><code>import lsutil\n\nlsutil.ls()\n</code></pre>"},{"location":"#developments","title":"Developments","text":"<ul> <li>Source code on github:\u00a0\u00a0https://github.com/koobedoc/lsutil</li> <li>Package on PyPI: https://pypi.org/search/?q=lsutil</li> </ul>"},{"location":"api_lsutil/","title":"API lsutil","text":""},{"location":"api_lsutil/#class-lsutil","title":"class Lsutil","text":"Unix ls command in Python"},{"location":"api_lsutil/#__init__-self-anchor-class-method-data-toc-label__init__","title":"__init__ (self) #### {: .anchor .class-method  data-toc-label='__init__' }","text":"Initialize self.  See help(type(self)) for accurate signature."},{"location":"api_lsutil/#ls-self-pathnames-list-one-bool-false-longs-bool-false-classify-bool-false-capture-list-none-formats-str-none-humanize-bool-false-anchor-class-method-data-toc-labells","title":"ls (self, pathnames: list, one: bool = False, longs: bool = False, classify: bool = False, capture: list = None, formats: str = None, humanize: bool = False) #### {: .anchor .class-method  data-toc-label='ls' }","text":"Unix ls command clone"},{"location":"api_lsutil/#main_cli-anchor-class-method-data-toc-labelmain_cli","title":"main_cli () #### {: .anchor .class-method  data-toc-label='main_cli' }","text":"Unix command line interface"},{"location":"api_lsutil/#parse_cli-self-anchor-class-method-data-toc-labelparse_cli","title":"parse_cli (self) #### {: .anchor .class-method  data-toc-label='parse_cli' }","text":"Parse Unix command line arguments"},{"location":"comparison/","title":"Comparisons","text":"Feature ls tree find lsutil Output HTML Output - Yes - Planned XML  Output - Yes - Planned JSON Output - - - Planned Tree output - Yes - planned Collapse - - - planned Format string - dateonly Yes planned Traversal Depth/Breath first - - Yes planned Depth limit - Yes Yes planned File limit - Yes - planned Selection Wilcard Pattern - Yes Yes planned Regex Pattern - Yes Yes planned Type filter - - Yes planned Time filter - - Yes planned Size filter - - Yes planned Exclude RCS files - - - planned Action Exec - - Yes No Delete - - Yes No"},{"location":"dev/","title":"Development Guides","text":"<ul> <li>https://github.com/koobedoc/lsutil</li> </ul>"},{"location":"man/","title":"Man Page","text":"<p><code>lsutil [options]</code></p>"},{"location":"man/#syntax","title":"Syntax","text":"<code>--long</code> use a long listing format <code>--all</code> <p>show entries starting with '.', except for '.' and '..'</p> <code>-1</code>, <code>--one</code>: <p>show one line per entry</p> <code>--formats</code> <p>use a format string to print entry. See Formatting the Output below.</p> <code>--tree</code>: <p>show entries in a tree form.</p> <code>--no-rcs</code>: <p>ignore entries per revision control system.</p>"},{"location":"man/#formatting-the-output","title":"Formatting the Output","text":"<p>(Copied from time command, not correct for lsutil)</p> <p>The format string FORMAT controls the contents of the time output.  The format string can be set using the <code>-f' or</code>--format', <code>-v' or</code>--verbose', or <code>-p' or</code>--portability' options.  If they are not given, but the TIME environment variable is set, its value is used as the format string.  Otherwise, a built-in default format is used. The default format is:  %Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k  %Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps</p> <p>The format string usually consists of <code>resource specifiers' interspersed with plain text.  A percent sign (</code>%') in the format string causes the following character to be interpreted as a resource specifier, which is similar to the formatting characters in the printf(3) function.</p> <p>A backslash (<code>\\') introduces a</code>backslash escape', which is translated into a single printing character upon output.  <code>\\t' outputs a tab character,</code>\\n' outputs a newline, and <code>\\\\' outputs a backslash.  A backslash followed by any other character outputs a question mark (</code>?') followed by a backslash, to indicate that an invalid backslash escape was given.</p> <p>Other text in the format string is copied verbatim to the output.</p> <p>time always prints a newline after printing the resource use information, so normally format strings do not end with a newline character (or `\\n').</p> <p>There are many resource specifications.  Not all resources are measured by all versions of Unix, so some of the values might be reported as zero.  Any character following a percent sign that is not listed in the table below causes a question mark (`?') to be output, followed by that character, to indicate that an invalid resource specifier was given.</p> <p>The resource specifiers, which are a superset of those recognized by the tcsh(1) builtin `time' command, are:</p> <pre><code>  %      A literal `%'.\n  C      Name and command line arguments of the command being timed.\n  D      Average size of the process's unshared data area, in Kilobytes.\n  E      Elapsed real (wall clock) time used by the process, in [hours:]minutes:seconds.\n  P      Percentage of the CPU that this job got.  This is just user + system times divided by the total\n         running time.  It also prints a percentage sign.\n</code></pre>"},{"location":"man/#see-also","title":"See Also","text":"<p>ls(1)</p>"},{"location":"usages/","title":"Usages","text":""},{"location":"usages/#using-finds-functionalities","title":"Using <code>find</code>'s functionalities","text":"<p>List files modified recently within 7 days. <pre><code>lsutil --mtime -7d\n</code></pre></p>"}]}